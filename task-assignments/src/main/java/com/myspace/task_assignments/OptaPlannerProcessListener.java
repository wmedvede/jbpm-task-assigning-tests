package com.myspace.task_assignments;


import org.kie.api.event.process.ProcessCompletedEvent;
import org.kie.api.event.process.ProcessEventListener;
import org.kie.api.event.process.ProcessNodeLeftEvent;
import org.kie.api.event.process.ProcessNodeTriggeredEvent;
import org.kie.api.event.process.ProcessStartedEvent;
import org.kie.api.event.process.ProcessVariableChangedEvent;
import org.kie.api.event.process.SLAViolatedEvent;
import org.kie.api.runtime.process.NodeInstance;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class OptaPlannerProcessListener implements ProcessEventListener {

    public OptaPlannerProcessListener() {
    }

    @Override
    public void beforeProcessStarted(ProcessStartedEvent event) {

    }

    @Override
    public void afterProcessStarted(ProcessStartedEvent event) {

    }

    @Override
    public void beforeProcessCompleted(ProcessCompletedEvent event) {

    }

    @Override
    public void afterProcessCompleted(ProcessCompletedEvent event) {

    }

    @Override
    public void beforeNodeTriggered(ProcessNodeTriggeredEvent event) {

    }

    @Override
    public void afterNodeTriggered(ProcessNodeTriggeredEvent event) {

    }

    @Override
    public void beforeNodeLeft(ProcessNodeLeftEvent event) {

    }

    @Override
    public void afterNodeLeft(ProcessNodeLeftEvent event) {

    }

    @Override
    public void beforeVariableChanged(ProcessVariableChangedEvent event) {

    }

    @Override
    public void afterVariableChanged(ProcessVariableChangedEvent event) {

    }

    @Override
    public void beforeSLAViolated(SLAViolatedEvent event) {

    }

    @Override
    public void afterSLAViolated(SLAViolatedEvent event) {
        NodeInstance nodeInstance = event.getNodeInstance();
        System.out.println("**** -> afterSLAViolated {" +
                                   "\n  nodeInstanceId: " + nodeInstance.getId() + ")" +
                                   "\n  nodeId: " + nodeInstance.getNodeId() + ")" +
                                   "\n  nodeName: " + nodeInstance.getNodeName() +
                                   "\n  processInstanceId: " + event.getProcessInstance().getId() +
                                   "\n  processName: " + event.getProcessInstance().getProcessName() +
                                   "}");
    }
}
